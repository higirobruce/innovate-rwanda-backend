# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker compose reference guide at
# https://docs.docker.com/compose/compose-file/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
services:
  server:
    build:
      context: .
    environment:
      NODE_ENV: production
      DATABASE_URL_PROD: http://localhost:5432
      DB_USER_PROD: userinnovate
      DB_PASSWORD_PROD: mySecretPassword
      DB_NAME_PROD: innovatedb
      DB_HOST_PROD: localhost
      DB_PORT_PROD: 5432
      MAILER_EMAIL: 
      MAILER_CLIENT_ID:
      MAILER_CLIENT_SECRET:
      MAILER_REDIRECT_URI:
      MAILER_REFRESH_TOKEN:

      APP_URL_BACKEND: http://localhost:3000
      APP_URL: http://localhost:3000
      PATH_FILES: 
      SECRETKEY: 6562258d2d0df884deaca3f1
      COMPANY_DEL_KEY: myCompanyKeyLooongKeyCharactes
      RESET_PASSWORD_KEY: 6562258d2d0df884deaca3f3
      ACCOUNT_ACTIVATION_KEY: 6562258d2d0df884deaca3f4
    ports:
      - 5001:5000

    # The commented out section below is an example of how to define a PostgreSQL
    # database that your application can use. `depends_on` tells Docker Compose to
    # start the database before your application. The `db-data` volume persists the
    # database data between container restarts. The `db-password` secret is used
    # to set the database password. You must create `db/password.txt` and add
    # a password of your choosing to it before running `docker-compose up`.
    # depends_on:
    #   db:
    #     condition: service_healthy
  db:
    image: postgres
    restart: always
    # user: userinnovate
    # secrets:
    #   - db-password
    # volumes:
    #   - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=innovatedb
      - POSTGRES_PASSWORD=mySecretPassword
      - POSTGRES_USER=userinnovate
    expose:
      - 5432
    # healthcheck:
    #   test: ["CMD", "pg_isready"]
    #   interval: 10s
    #   timeout: 5s
    #   retries: 5
# volumes:
#   db-data: 
# secrets:
#   db-password:
#     file: db/password.txt
